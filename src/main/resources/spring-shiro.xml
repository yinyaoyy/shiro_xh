<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
    <!--创建 securityManager对象 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myrealm"></property>
       <!-- <property name="sessionManager" ref="sessionManager"/>--><!--暂时不需要自定义的session会话管理-->
    </bean>
 <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"></property>
    <property name="loginUrl" value="login.jsp"></property>
    <property name="unauthorizedUrl" value="index.html"></property>
    <property name="filterChainDefinitions">
      <value>
          /login.jsp = anon
          /login.html=anon
          /login = anon
          /index.html = anon
          /testRole = roles["科长","超级管理员"]<!--此处和自定义fliter不同，此处用户必须满足“科长”和“超级管理员”才能访问testRole-->
          /testRole1 = roleList["科长","超级管理员"]  <!--此处的roleList是filters中自定义filter的key，在自定义中只要是用户满足了其中一个角色就会登录成功-->
          /* = authc
      </value>
    </property>
     <property name="filters">
         <util:map>
             <entry key="roleList" value-ref="rolesFilter"/>
         </util:map>
     </property>
 </bean>
    <!--自定义的授权filter-->
    <bean id = "rolesFilter" class="com.yinyao.filter.RolesFilter"/>
    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    <!--自定义的授权认证realm-->
     <bean id="myrealm" class="com.yinyao.OwnRealm"/>
   <!--自己写的sessionDao注入DefaultWebSessionManager，暂时不需要自定义的sessionManager-->
    <!--<bean id="sessionManager" class="com.yinyao.session.CustomSessionManager">
        <property name="sessionDAO" ref="redisSessionDao"/>
    </bean>
    <bean id="redisSessionDao" class="com.yinyao.session.RedisSessionDao"/>-->
    </beans>
    